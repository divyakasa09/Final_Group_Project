/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminJPanels;

import Business.Business;
import java.awt.Color;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author divya
 */
public class InsurancepieChartJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InsurancepieChartJPanel
     */
Business business;
    public InsurancepieChartJPanel() {
        initComponents();
    }
   public InsurancepieChartJPanel(Business business) {
        initComponents();
      this.business = business;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */



    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        silverpanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("silver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        silverpanel.setBackground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout silverpanelLayout = new javax.swing.GroupLayout(silverpanel);
        silverpanel.setLayout(silverpanelLayout);
        silverpanelLayout.setHorizontalGroup(
            silverpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        silverpanelLayout.setVerticalGroup(
            silverpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );

        jButton2.setText("gold");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("platinum");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(silverpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(jButton2)
                        .addGap(212, 212, 212)
                        .addComponent(jButton3)))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(silverpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 540));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
  DefaultPieDataset dataset = new DefaultPieDataset();

        // Step 2: Add data to the dataset
        dataset.setValue(" 50% Coverage", new Integer(50));
        dataset.setValue("50% percent of money you pay", new Integer(50));

        // Step 3: Create a chart
        JFreeChart chart = ChartFactory.createPieChart(
            "Pie Chart", // Chart title
            dataset, // Dataset
            true, // Legend
            true, // Tooltips
            false // URLs
        );

        // Step 4: Customize the chart
         PiePlot plot = (PiePlot) chart.getPlot();
         //plot.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("Pie Chart",chart);
        frame.setVisible(true);
        frame.setSize(450,500);
   
//       plot.setSectionPaint("Value 1", Color.BLUE);
//       plot.setSectionPaint("Value 2", Color.RED);
//
//// Step 5: Display the chart
//   ChartPanel chartPanel = new ChartPanel(chart);
//   silverpanel.add(chartPanel); // Add the chart panel to the silverpanel
//   chartPanel.setPreferredSize(new java.awt.Dimension(450, 500));
//
//        silverpanel.revalidate();
//        silverpanel.repaint();
//        ChartPanel chartPanel = new ChartPanel(chart);
//        JFrame frame = new JFrame("Pie Chart");
//        frame.getContentPane().add(chartPanel);
//        frame.setSize(500, 500);
//        frame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
  DefaultPieDataset dataset = new DefaultPieDataset();

        // Step 2: Add data to the dataset
        dataset.setValue(" 70% Coverage", new Integer(70));
        dataset.setValue("30 % percent of money you pay", new Integer(30));

        // Step 3: Create a chart
        JFreeChart chart = ChartFactory.createPieChart(
            "Pie Chart", // Chart title
            dataset, // Dataset
            true, // Legend
            true, // Tooltips
            false // URLs
        );

        // Step 4: Customize the chart
         PiePlot plot = (PiePlot) chart.getPlot();
         //plot.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("Pie Chart",chart);
        frame.setVisible(true);
        frame.setSize(450,500);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
  DefaultPieDataset dataset = new DefaultPieDataset();

        // Step 2: Add data to the dataset
        dataset.setValue(" 80% Coverage", new Integer(80));
        dataset.setValue("20% percent of money you pay", new Integer(20));

        // Step 3: Create a chart
        JFreeChart chart = ChartFactory.createPieChart(
            "Pie Chart", // Chart title
            dataset, // Dataset
            true, // Legend
            true, // Tooltips
            false // URLs
        );

        // Step 4: Customize the chart
         PiePlot plot = (PiePlot) chart.getPlot();
         //plot.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("Pie Chart",chart);
        frame.setVisible(true);
        frame.setSize(450,500);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel silverpanel;
    // End of variables declaration//GEN-END:variables
}
