/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.InsuranceJPanels;

import Business.Business;
import Insurance.InsuranceAgent.ApplicantDirectory;
import Insurance.InsuranceAgent.CreateApplicant;
import UserAccount.UserAccount;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author divya
 */
public class ManageApplicantJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageApplicantJPanel
     */
    Business business;
    UserAccount useraccount;
     private ApplicantDirectory applicantDirectory;
    
    public ManageApplicantJPanel() {
        initComponents();
    }
  public ManageApplicantJPanel(Business business,UserAccount useraccount,ApplicantDirectory applicantDirectory ) {
        initComponents();
        this.business=business;
        this.useraccount=useraccount;
        this.applicantDirectory=applicantDirectory;
          populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTable() {      
      
    DefaultTableModel dtm= (DefaultTableModel) tableApplicant.getModel();
    dtm.setRowCount(0);
      
    for (CreateApplicant applicant : this.business.getApplicantDirectory().getApplicantList()) {
        Object[] row = new Object[9];
        row[0] = applicant;
        row[1] = applicant.getFirstName();
        
        row[2] = applicant.getLastName();
        
        row[3] = applicant.getApplicationDate();
        row[4] = applicant.getAge();
        row[5]=applicant.getMobilenumber();
        row[6]=applicant.getGender();
        row[7]=applicant.getSSN();
        row[8] =applicant.getPlans().getPlanName();
        
         
        
        // check if any value in the row is null
        boolean hasNullValue = false;
        for (Object value : row) {
            if (value == null) {
                hasNullValue = true;
                break;
            }
        }
        
        // add the row to the table if all values are non-null
        if (!hasNullValue) {
            dtm.addRow(row);
        }
    }
}

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableApplicant = new javax.swing.JTable();
        backButton = new javax.swing.JButton();

        JPanel.setBackground(new java.awt.Color(204, 255, 204));

        tableApplicant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "First Name", "Last Name", "Application Date", "Age", "Mobile Number", "gender", "SSN", "PlanName"
            }
        ));
        jScrollPane1.setViewportView(tableApplicant);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPanelLayout = new javax.swing.GroupLayout(JPanel);
        JPanel.setLayout(JPanelLayout);
        JPanelLayout.setHorizontalGroup(
            JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(157, 157, 157))
        );
        JPanelLayout.setVerticalGroup(
            JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(backButton)
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new InsuranceAgentJFrame(business, useraccount);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel;
    private javax.swing.JButton backButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableApplicant;
    // End of variables declaration//GEN-END:variables
}
